name: Development Build

on:
  push:
    branches: [develop, dev]
  pull_request:
    branches: [develop, dev]

env:
  NODE_VERSION: '20'
  YARN_VERSION: '1.22.22'

jobs:
  # Quick Android build for development
  build-android-dev:
    name: Build Android APK (Dev)
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Setup Yarn
        run: |
          corepack enable
          corepack prepare yarn@${{ env.YARN_VERSION }} --activate

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            client/node_modules
            ~/.cache/yarn
            ~/.gradle/caches
            ~/.android
          key: ${{ runner.os }}-yarn-dev-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-dev-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Setup Expo CLI
        run: |
          npm install -g @expo/cli@latest

      - name: Install Expo dependencies
        run: |
          cd client
          expo install --fix

      - name: Generate Android project
        run: |
          cd client
          expo prebuild --platform android --clean

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            client/android/.gradle
            client/android/app/build
          key: ${{ runner.os }}-gradle-dev-${{ hashFiles('client/android/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-dev-

      - name: Build Android APK (Development)
        run: |
          cd client/android
          ./gradlew assembleDebug
        env:
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}

      - name: Upload APK as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk-dev
          path: client/android/app/build/outputs/apk/debug/app-debug.apk
          retention-days: 7

  # Quick type checking
  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Setup Yarn
        run: |
          corepack enable
          corepack prepare yarn@${{ env.YARN_VERSION }} --activate

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            client/node_modules
            ~/.cache/yarn
          key: ${{ runner.os }}-yarn-typecheck-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-typecheck-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run TypeScript checks
        run: |
          echo "Checking client types..."
          cd client && yarn tsc --noEmit
          echo "All type checks passed! âœ…"
