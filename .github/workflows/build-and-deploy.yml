name: Build Android APK

on:
  push:
    branches: [master, main]
  release:
    types: [published]

env:
  NODE_VERSION: '20'
  YARN_VERSION: '1.22.22'

jobs:
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Setup Yarn
        run: |
          corepack enable
          corepack prepare yarn@${{ env.YARN_VERSION }} --activate

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            client/node_modules
            ~/.cache/yarn
          key: ${{ runner.os }}-deps-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-deps-

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('client/android/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache Android SDK
        uses: actions/cache@v4
        with:
          path: |
            ~/.android
          key: ${{ runner.os }}-android-sdk
          restore-keys: |
            ${{ runner.os }}-android-sdk

      - name: Cache NPM and Expo
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ~/.expo
          key: ${{ runner.os }}-expo-${{ hashFiles('client/package.json', 'client/app.json') }}
          restore-keys: |
            ${{ runner.os }}-expo-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Setup Expo CLI
        run: |
          echo "Installing Expo CLI..."
          npm install -g @expo/cli@latest
          echo "Expo CLI installed successfully"
          # Verify installation using npx
          npx expo --version

      - name: Install Expo dependencies
        run: |
          cd client
          npx expo install --fix

      - name: Generate Android project
        run: |
          cd client
          npx expo prebuild --platform android --clean

      - name: Cache Android project build artifacts
        uses: actions/cache@v4
        with:
          path: |
            client/android/.gradle
            client/android/app/build
            client/android/build
          key: ${{ runner.os }}-android-build-${{ hashFiles('client/android/gradle/wrapper/gradle-wrapper.properties', 'client/android/app/build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-android-build-

      - name: Build Android APK
        run: |
          cd client/android
          ./gradlew assembleRelease --build-cache --parallel --daemon
        env:
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
          GRADLE_OPTS: "-Dorg.gradle.daemon=true -Dorg.gradle.parallel=true -Dorg.gradle.caching=true"
          APP_NAME: "Safarnak"
          APP_SCHEME: "safarnak"
          GRAPHQL_URL: "https://safarnak.mohet.ir/graphql"

      - name: Create GitHub Release
        if: github.event_name != 'release'
        id: create_release
        uses: actions/github-script@v7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const release = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `v${context.runNumber}`,
              name: `Safarnak Android v${context.runNumber}`,
              body: `## Safarnak Android APK
              
              **Build Number**: ${context.runNumber}
              **Commit**: ${context.sha}
              **Branch**: ${context.ref.replace('refs/heads/', '')}
              
              ### Download
              Download the APK file below to install on your Android device.
              
              ### Installation
              1. Download the APK file
              2. Enable "Install from unknown sources" in Android settings
              3. Install the APK
              
              ### Features
              - GraphQL API integration
              - Offline-first architecture
              - Persian/English language support`,
              draft: false,
              prerelease: false
            });
            
            return release.data.upload_url;

      - name: Upload APK to GitHub Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.result }}
          asset_path: ./client/android/app/build/outputs/apk/release/app-release.apk
          asset_name: safarnak-android-v${{ github.run_number }}.apk
          asset_content_type: application/vnd.android.package-archive
