name: Build Android APK

on:
  push:
    branches: [master, main]
  release:
    types: [published]

env:
  NODE_VERSION: '20'
  YARN_VERSION: '1.22.22'
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Dorg.gradle.parallel=true -Dorg.gradle.caching=true -Dorg.gradle.jvmargs=-Xmx3072m -Dkotlin.compiler.execution.strategy=in-process"

jobs:
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Free disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          df -h

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: '11076708'
          
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            client/node_modules
            ~/.cache/yarn
          key: ${{ runner.os }}-deps-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-deps-

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            client/android/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile --network-timeout 100000
          cd client && yarn install --frozen-lockfile --network-timeout 100000

      - name: Setup Expo and generate Android project  
        run: |
          npm install -g @expo/cli@latest --force
          cd client
          npx expo prebuild --platform android --clean --no-install

      - name: Make Gradle wrapper executable
        run: chmod +x client/android/gradlew

      - name: Build Android APK
        run: |
          cd client/android
          ./gradlew assembleRelease \
            --no-daemon \
            --max-workers=2 \
            --build-cache \
            --parallel \
            --stacktrace \
            --info
        env:
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
          APP_NAME: "Safarnak"
          APP_SCHEME: "safarnak"
          GRAPHQL_URL: "https://safarnak.mohet.ir/graphql"

      - name: Create GitHub Release
        if: github.event_name != 'release'
        id: create_release
        uses: actions/github-script@v7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const release = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `v${context.runNumber}`,
              name: `Safarnak Android v${context.runNumber}`,
              body: `## Safarnak Android APK
              
              **Build Number**: ${context.runNumber}
              **Commit**: ${context.sha}
              **Branch**: ${context.ref.replace('refs/heads/', '')}
              
              ### Download
              Download the APK file below to install on your Android device.
              
              ### Installation
              1. Download the APK file
              2. Enable "Install from unknown sources" in Android settings
              3. Install the APK
              
              ### Features
              - GraphQL API integration
              - Offline-first architecture
              - Persian/English language support`,
              draft: false,
              prerelease: false
            });
            
            return release.data.upload_url;

      - name: Upload APK to GitHub Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.result }}
          asset_path: ./client/android/app/build/outputs/apk/release/app-release.apk
          asset_name: safarnak-android-v${{ github.run_number }}.apk
          asset_content_type: application/vnd.android.package-archive
